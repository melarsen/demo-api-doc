openapi: 3.0.0
info:
  title: Proteria Group - Shipment API
  description: The Proteria Group Shipment API
  termsOfService: https://www.proteria.com/proteriaapiterms
  contact:
    email: mette@proteria.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
  - url: https://localhost:8000/proteriagroup/shipment/1.0.0
    description: Proteria Group API - Shipment
paths:
  /carriers:
    get:
      summary: get all possible carriers and their products
      operationId: getCarriers
      responses:
        '200':
          description: successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Carriers'
  /shipments:
    post:
      summary: create one or more shipments
      description: Creates one or more shipments
      operationId: createShipments
      requestBody:
        $ref: '#/components/requestBodies/ShipmentItems'
      responses:
        '202':
          description: item accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestConfirmation'
        '400':
          description: item rejected, requestId will be empty
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestConfirmation'

  /shipment/findByRequestId:
    get:
      summary: get shipment by requestId
      description: With the received requestId from /shipments, get the associated response
      operationId: findShipmentsByRequestId
      parameters:
        - name: requestId
          in: query
          description: The requestId received from shipments/ endpoint
          required: true
          schema:
            type: string
      responses:
        200:
          description: "successful operation"
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ShipmentResponse"
        400:
          description: "Invalid arguments"
        404:
          description: "Not found"

components:
  schemas:
    Carriers:
      type: array
      description: A list of carriers
      items:
        $ref: '#/components/schemas/Carrier'
    Carrier:
      required:
        - carrierId
      description: Specification of a carrier
      type: object
      properties:
        carrierId:
          type: string
          example: postnord_no
        carrierName:
          type: string
          example: Postnord Norge
        carrierProducts:
          type: array
          description: list of this carrier products
          items:
            $ref: '#/components/schemas/CarrierProduct'
    CarrierProduct:
      required:
        - productId
      description: Specification of a carrier product
      type: object
      properties:
        productId:
          type: string
          example: MYPACK_BOX
        productName:
          type: string
          example: Mypack Box
        productServices:
          type: array
          description: list of this products additional services
          items:
            $ref: '#/components/schemas/ProductService'
    ProductService:
      description: Specification of a product additional service
      type: object
      properties:
        serviceId:
          type: string
          example: postnord_notification_email
        serviceName:
          type: string
          example: Postnord Notification Email
        serviceValue:
          type: string
          example: notifyme@somewhere.com
    ShipmentItems:
      type: array
      description: A list of shipment items
      items:
        $ref: '#/components/schemas/ShipmentItem'
    ShipmentItem:
      required:
        - carrier
        - carrierProduct
        - carrierProductServiceJson
        - consignee
        - consignor
        - shipmentId
        - parcels
      type: object
      properties:
        shipmentId:
          type: string
          format: uuid - or what?
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        correlationId:
          type: string
          description: Your given unique id for this shipment, matches the correlationId in the response
        carrier:
          type: string
          example: postnord_no
          description: Given identifier of the carrier. Get all possible identifiers from carriers/
        carrierProduct:
          type: string
          example: MYPACK_BOX
          description: Given identifier of the carrier product. Get all possible identifiers from carriers/
        services:
          type: array
          items:
            $ref: '#/components/schemas/ServiceItem'
        consignor:
          $ref: '#/components/schemas/AddressParty'
        consignee:
          $ref: '#/components/schemas/AddressParty'
        carrierMessage:
          type: string
          example: Entrance B, gate 44, blue doorbell
          description: Extra message to the carrier
        consigneeMessage:
          type: string
          example: As requested
          description: Extra message to the consignee
        consignorReference:
          type: string
          example: Ordernumber 1234
          description: Senders reference
        consigneeReference:
          type: string
          example: Purchase order 4321
          description: Receivers reference
        parcels:
          type: array
          items:
            $ref: '#/components/schemas/ParcelItem'
    ServiceItem:
      required:
      - serviceId
      type: object
      properties:
        serviceId:
          type: string
          description: Given identifier of the carrier service. Get all possible identifiers from carriers/
        serviceValue:
          type: string
          description: Given value of the carrier service. Get all possible values from carriers/
    AddressParty:
      required:
        - name
        - address1
        - country
        - postCity
        - postCode
      type: object
      properties:
        name:
          type: string
          example: Ola Nordmann
        address1:
          type: string
          example: Andeveien 13
        address2:
          type: string
          example: 3. Etg.
        postCode:
          type: string
          example: '3131'
        postCity:
          type: string
          example: Andeby
        state:
          type: string
          example: 'false'
        country:
          type: string
          example: 'false'
        phone:
          type: string
          example: '+4799887766'
        email:
          type: string
          example: receiver@somewhere.com
        contactPersonName:
          type: string
          example: Name of contact person
        contactPersonPhone:
          type: string
          example: Phone of contact person
        contactPersonEmail:
          type: string
          example: Email of contact person
    ParcelItem:
      required:
        - amount
        - parcelType
      type: object
      properties:
        parcelType:
          type: string
          example: kolli - Evt. om den skulle v√¶rt enum?
        correlationId:
          type: string
          description: Your given unique id for this parcel, matches the correlationId in the response
        lengthCM:
          type: integer
          example: 10
        widthCM:
          type: integer
          example: 20
        heightCM:
          type: integer
          example: 30
        weightKG:
          type: integer
          example: 5
        volumeDM3:
          type: integer
          example: 1
        loadMeters:
          type: integer
          example: 2
        description:
          type: string
          example: Your description
    ShipmentResponse:
      type: object
      properties:
        idempotencyKey:
          type: string
          description: Unique key for this response? Or is this the requestId?
        shipments:
          type: array
          description: A list of shipments 
          items:
            $ref: '#/components/schemas/Shipment'
    Shipment:
      type: object
      properties:
        id:
          type: string
        correlationId:
          type: string
        consignmentNumber:
          type: string
        trackingNumber:
          type: string
        parcels:
          type: array
          description: list of parcels
          items:
            $ref: '#/components/schemas/Parcel'
    Parcel:
      type: object
      properties:
        parcelId:
          type: string
        correlationId:
          type: string
          description: Unique id for this parcel, matches the given correlationId from the request
        parcelNumber:
          type: string
        trackingNumber:
          type: string
    RequestConfirmation:
      type: object
      properties:
        requestId:
          type: string
          description: If successful, a given request id. For this approach, the requestId is created "in the system" (and not by the calling system)
          example: '123456789'
        errors:
          type: array
          description: If unsuccessful, a list of errors
          items:
            $ref: '#/components/schemas/Error'
    Error:
      type: object
      properties:
        errorCode:
          type: integer
        errorText:
          type: string
  requestBodies:
    ShipmentItems:
      description: ShipmentItems
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ShipmentItems'